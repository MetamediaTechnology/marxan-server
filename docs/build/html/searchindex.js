Search.setIndex({"docnames": ["index", "modules", "server"], "filenames": ["index.rst", "modules.rst", "server.rst"], "titles": ["Welcome to Marxan Server\u2019s documentation", "marxan-server", "server module"], "terms": {"index": 0, "modul": 0, "search": [0, 2], "page": [0, 2], "core": 2, "handl": 2, "all": 2, "marxan": 2, "rest": 2, "api": 2, "request": 2, "thi": [0, 2], "i": [0, 2], "run": [0, 2], "tornado": 2, "web": [0, 2], "softwar": [0, 2], "return": 2, "json": 2, "data": 2, "those": 2, "defin": 2, "follow": [0, 2], "global": 2, "variabl": 2, "constant": 2, "ar": 2, "us": [0, 2], "privat": 2, "function": 2, "prefix": 2, "an": 2, "underscor": 2, "intern": 2, "implement": 2, "handler": 2, "class": 2, "httprequest": 2, "marxanresthandl": 2, "descend": 2, "websocket": 2, "long": 2, "process": 2, "marxanwebsockethandl": 2, "utilii": 2, "e": 2, "g": 2, "interact": 2, "postgi": 2, "applic": [0, 2], "base": 2, "which": 2, "dict_pad": 2, "25": 2, "text": 2, "right": 2, "pad": 2, "much": 2, "dictionari": 2, "output": 2, "docs_root": 2, "http": [0, 2], "doc": [0, 2], "marxanweb": [0, 2], "org": [0, 2], "The": 2, "url": 2, "document": 2, "root": 2, "errors_pag": 2, "error": 2, "html": 2, "export_f_metadata": 2, "featur": 2, "csv": 2, "name": 2, "file": 2, "contain": 2, "metadata": 2, "dure": 2, "project": 2, "export": 2, "export_f_shp_fold": 2, "f_shp": 2, "folder": 2, "where": 2, "shapefil": 2, "export_pu_metadata": 2, "planning_grid": 2, "plan": [0, 2], "grid": 2, "export_pu_shp_fold": 2, "pu_shp": 2, "extendableobject": 2, "object": 2, "custom": 2, "allow": 2, "extend": 2, "new": 2, "attribut": 2, "feature_preprocessing_filenam": 2, "feature_preprocess": 2, "dat": 2, "preprocess": 2, "summari": 2, "inform": 2, "total": 2, "number": 2, "unit": 2, "area": 2, "intersect": 2, "gbif_api_root": 2, "gbif": 2, "v1": 2, "gbif_concurr": 2, "10": 2, "how": 2, "mani": 2, "concurr": 2, "download": 2, "do": 2, "gbif_occurrence_limit": 2, "200000": 2, "www": 2, "develop": [0, 2], "occurr": 2, "type": 2, "from": 2, "here": 2, "gbif_page_s": 2, "300": 2, "size": 2, "record": 2, "gbif_point_buffer_radiu": 2, "1000": 2, "radiu": 2, "meter": 2, "buffer": 2, "lat": 2, "lng": 2, "coordin": 2, "guest_usernam": 2, "guest": 2, "user": 2, "logging_level": 2, "20": 2, "log": 2, "level": 2, "control": 2, "what": 2, "consol": 2, "option": 2, "info": 2, "debug": 2, "warn": 2, "critic": 2, "sql": 2, "statement": 2, "can": [0, 2], "set": [0, 2], "mapbox_us": 2, "andrewcottam": 2, "default": 2, "mapbox": 2, "account": 2, "store": 2, "vector": 2, "tile": 2, "marxan_log_filenam": 2, "configur": 2, "marxan_registri": 2, "github": 2, "io": 2, "gener": 2, "registri": 2, "host": 2, "map": 2, "other": 2, "marxan_server_vers": 2, "0": 2, "9": 2, "version": 2, "httpserverrequest": 2, "kwarg": 2, "ani": 2, "requesthandl": 2, "authent": 2, "authoris": 2, "except": 2, "write": 2, "header": 2, "send": 2, "respons": 2, "deriv": 2, "A": 2, "string": 2, "make": 2, "argument": 2, "kei": 2, "folder_us": 2, "path": 2, "folder_project": 2, "folder_input": 2, "input": 2, "folder_output": 2, "get_current_us": 2, "get": 2, "current": 2, "paramet": 2, "none": 2, "prepar": 2, "call": 2, "befor": 2, "doe": 2, "neccessari": 2, "send_respons": 2, "dict": 2, "set_default_head": 2, "cor": 2, "prevent": 2, "client": [0, 2], "write_error": 2, "status_cod": 2, "uncaught": 2, "stack": 2, "trace": 2, "back": 2, "see": [0, 2], "tornadoweb": 2, "en": 2, "stabl": 2, "marxanserviceserror": 2, "arg": 2, "rais": 2, "marxansubprocess": 2, "bufsiz": 2, "1": 2, "execut": 2, "stdin": 2, "stdout": 2, "stderr": 2, "preexec_fn": 2, "close_fd": 2, "true": 2, "shell": 2, "fals": 2, "cwd": 2, "env": 2, "universal_newlin": 2, "startupinfo": 2, "creationflag": 2, "restore_sign": 2, "start_new_sess": 2, "pass_fd": 2, "group": 2, "extra_group": 2, "encod": 2, "umask": 2, "pipes": 2, "popen": 2, "subclass": 2, "regist": 2, "callback": 2, "when": 2, "complet": 2, "window": 2, "subprocess": 2, "set_exit_callback": 2, "support": 2, "python": 2, "3": 2, "librari": 2, "constructor": 2, "set_exit_callback_window": 2, "creat": 2, "anoth": 2, "thread": 2, "poll": 2, "finish": 2, "websockethandl": 2, "keep": 2, "aliv": 2, "ping": 2, "same": 2, "check_origin": 2, "origin": 2, "check": 2, "access": 2, "domain": 2, "resourc": 2, "secur": 2, "disabl": 2, "bool": 2, "If": [0, 2], "have": 2, "permiss": 2, "close": 2, "closemessag": 2, "clean": 2, "connect": 2, "messag": 2, "valu": 2, "empti": 2, "wa": 2, "async": 2, "open": 2, "startmessag": 2, "start": 2, "timestamp": 2, "id": 2, "associ": 2, "queri": 2, "permitted_method": 2, "getserverdata": 2, "createus": 2, "validateus": 2, "resendpassword": 2, "testtornado": [0, 2], "getprojectswithgrid": 2, "servic": [0, 2], "need": 2, "ping_interv": 2, "30000": 2, "interv": 2, "between": 2, "regular": 2, "protected_area_intersections_filenam": 2, "protected_area_intersect": 2, "protect": 2, "wdpa": 2, "util": 2, "read": 2, "within": 2, "singleton": 2, "instanc": 2, "pg": 2, "pool": 2, "aiopg": 2, "manag": 2, "createprimarykei": 2, "feature_class_nam": 2, "column": 2, "primari": 2, "pass": 2, "feature_class": 2, "feature_class_snam": 2, "returnformat": 2, "filenam": 2, "sockethandl": 2, "them": 2, "list": 2, "substitut": 2, "express": 2, "mogrifi": 2, "result": 2, "specifi": 2, "format": 2, "One": 2, "arrai": 2, "datafram": 2, "pid": 2, "so": 2, "stop": 2, "tupl": 2, "panda": 2, "under": 2, "certain": 2, "condit": 2, "databas": 2, "integr": 2, "exporttoshapefil": 2, "exportfold": 2, "tepsgcod": 2, "epsg": 2, "4326": 2, "ogr2ogr": 2, "full": 2, "target": 2, "code": 2, "wgs84": 2, "success": 2, "otherwis": 2, "int": 2, "import": 2, "fail": 2, "getgeometrytyp": 2, "geometri": 2, "st_pointgetgeometrytyp": 2, "importfil": 2, "sepsgcod": 2, "splitatdatelin": 2, "sourcefeatureclass": 2, "geodatabas": 2, "locat": 2, "destin": 2, "sourc": 2, "split": 2, "datelin": 2, "onli": 2, "importfilegdbfeatureclass": 2, "filegdb": 2, "destfeatureclass": 2, "includ": 2, "gdb": 2, "extens": 2, "importgml": 2, "gmlfilenam": 2, "gml": 2, "importshapefil": 2, "initialis": 2, "On": 2, "point": 2, "isvalid": 2, "test": 2, "valid": 2, "delet": 2, "querywebsockethandl": 2, "end": 2, "q": 2, "executequeri": 2, "role_unauthorised_method": 2, "admin": 2, "readonli": 2, "createproject": 2, "createimportproject": 2, "upgradeproject": 2, "deleteproject": 2, "cloneproject": 2, "createprojectgroup": 2, "renameproject": 2, "updateprojectparamet": 2, "getcountri": 2, "deleteplanningunitgrid": 2, "createplanningunitgrid": 2, "uploadtilesettomapbox": 2, "uploadfiletofold": 2, "uploadfil": 2, "importplanningunitgrid": 2, "createfeaturepreprocessingfilefromimport": 2, "getus": 2, "updateuserparamet": 2, "getfeatur": 2, "importfeatur": 2, "getplanningunitsdata": 2, "updatepufil": 2, "getspeciesdata": 2, "getspeciespreprocessingdata": 2, "updatespecfil": 2, "getprotectedareaintersectionsdata": 2, "getmarxanlog": 2, "getbestsolut": 2, "getoutputsummari": 2, "getsummedsolut": 2, "getmissingvalu": 2, "preprocessfeatur": 2, "preprocessplanningunit": 2, "preprocessprotectedarea": 2, "runmarxan": 2, "stopprocess": 2, "testroleauthoris": 2, "deletefeatur": 2, "deleteus": 2, "getrunlog": 2, "clearrunlog": 2, "updatewdpa": 2, "unzipshapefil": 2, "getshapefilefieldnam": 2, "createfeaturefromlinestr": 2, "rungapanalysi": 2, "toggleenableguestus": 2, "importgbifdata": 2, "deletegapanalysi": 2, "shutdown": 2, "addparamet": 2, "block": 2, "resetdatabas": 2, "cleanup": 2, "exportproject": 2, "importproject": 2, "getcost": 2, "updatecost": 2, "deletecost": 2, "runsqlfil": 2, "exportplanningunitgrid": 2, "exportfeatur": 2, "role": 2, "add": 2, "you": [0, 2], "want": 2, "lock": 2, "down": 2, "specif": 2, "ad": 2, "method": 2, "unavail": 2, "run_log_filenam": 2, "runlog": 2, "server_config_filenam": 2, "show_start_log": 2, "To": 2, "shutdown_ev": 2, "event": 2, "clear": 2, "exit": 2, "gracefulli": 2, "uniform_cost_nam": 2, "equal": 2, "cost": 2, "profil": 2, "user_data_filenam": 2, "either": 2, "iter": 2, "through": 2, "doesnt": 2, "alreadi": 2, "exist": 2, "requir": 2, "param": 2, "updat": 2, "structur": 2, "pair": 2, "second": 2, "nbsp": [], "up": 2, "clump": 2, "clone": 2, "linestr": 2, "alia": 2, "metadata_interest_featur": 2, "tabl": 2, "descript": 2, "form": 2, "28": 2, "2": 2, "4": 2, "5": 2, "oid": 2, "uploadid": 2, "tileset": 2, "upload": 2, "post": 2, "popul": 2, "puvspr": 2, "createfeaturesfromwf": 2, "wf": 2, "endpoint": 2, "sr": 2, "spatial": 2, "refer": 2, "system": [0, 2], "featuretyp": 2, "layer": 2, "repres": 2, "detail": [0, 2], "progress": 2, "elapsedtim": 2, "elaps": 2, "time": 2, "statu": 2, "featurecr": 2, "one": 2, "more": 2, "simpl": 2, "wizard": 2, "iso3": 2, "countri": 2, "letter": 2, "marin": 2, "terrestri": 2, "areakm2": 2, "km2": 2, "shape": 2, "squar": 2, "hexagon": 2, "planning_grid_nam": 2, "interest_featur": 2, "comma": 2, "separ": 2, "interest": 2, "target_valu": 2, "correspond": 2, "spf_valu": 2, "spf": 2, "n": 2, "rang": 2, "blm": 2, "_clump": 2, "copi": 2, "blmvalu": 2, "each": 2, "password": 2, "caution": 2, "plain": 2, "fullnam": 2, "email": 2, "costnam": 2, "its": 2, "feature_nam": 2, "cannot": 2, "becaus": 2, "suppli": 2, "pre": 2, "cook": 2, "gap": 2, "analysi": 2, "exampl": 2, "chang": 2, "last": 2, "cluster": 2, "projectnam": 2, "deleteshapefil": 2, "zip": 2, "unzip": 2, "present": 2, "zipfil": 2, "shapfil": 2, "match": 2, "dismissnotif": 2, "append": 2, "notificationid": 2, "notifications_filenam": 2, "dismiss": 2, "notif": 2, "export_fold": 2, "old": 2, "mxw": 2, "getallspeciesdata": 2, "speci": 2, "extent": 2, "creation_d": 2, "tilesetid": 2, "created_bi": 2, "best": 2, "solut": 2, "output_mvbest": 2, "name_iso31": 2, "has_marin": 2, "getfeatureplanningunit": 2, "puid": 2, "occur": 2, "content": 2, "miss": 2, "singl": 2, "missingvalu": 2, "output_mv": 2, "output_sum": 2, "getpudata": 2, "some": 2, "pu_data": 2, "getplanningunitgrid": 2, "planning_unit_grid": 2, "aoi_id": 2, "country_id": 2, "envelop": 2, "planning_unit_count": 2, "_area": 2, "getplanningunitscostdata": 2, "punam": 2, "classifi": 2, "min": 2, "minimum": 2, "max": 2, "maximum": 2, "normalis": 2, "245": 2, "3586": 2, "45": 2, "297": 2, "5908": 2, "5909": 2, "getproject": 2, "created": 2, "iucn_categori": 2, "oldvers": 2, "planning_unit_nam": 2, "pu_alia": 2, "pu_area": 2, "pu_countri": 2, "pu_created_bi": 2, "pu_creation_d": 2, "pu_descript": 2, "pu_domain": 2, "boundnam": 2, "puvsprnam": 2, "specnam": 2, "respect": 2, "runparamet": 2, "render": 2, "classif": 2, "colorcod": 2, "numclass": 2, "topclass": 2, "item": 2, "count": 2, "planning_unit": 2, "status": 2, "iucn": 2, "categori": 2, "ii": 2, "iii": 2, "These": 2, "getresult": 2, "combin": 2, "sum": 2, "mvbest": 2, "ssoln": 2, "output_ssoln": 2, "endtim": 2, "runtim": 2, "starttim": 2, "abject": 2, "serverdata": 2, "certfil": 2, "database_version_postgi": 2, "database_version_postgresql": 2, "disable_file_log": 2, "disable_secur": 2, "disk_free_spac": 2, "enable_guest_us": 2, "enable_reset": 2, "keyfil": 2, "machin": 2, "marxan_client_vers": 2, "node": 2, "permitted_domain": 2, "planning_grid_units_limit": 2, "port": 2, "processor": 2, "processor_count": 2, "ram": 2, "releas": 2, "server_descript": 2, "server_nam": 2, "wdpa_vers": 2, "field": 2, "minu": 2, "shp": 2, "fieldnam": 2, "getsolut": 2, "individu": 2, "mv": 2, "Not": 2, "retriev": 2, "For": 2, "prop": 2, "userdata": 2, "lastproject": 2, "showpopup": 2, "basemap": 2, "usefeaturecolor": 2, "showwelcomescreen": 2, "reportunit": 2, "unauthorisedmethod": 2, "dismissednotif": 2, "multipl": 2, "": 2, "omit": 2, "splitfield": 2, "taxonkei": 2, "taxon": 2, "scientificnam": 2, "scientif": 2, "getcommonnam": 2, "vernacularnam": 2, "languag": 2, "eng": 2, "common": 2, "vernacular": 2, "getgbifoccurr": 2, "definit": 2, "eventd": 2, "gbifid": 2, "getvernacularnam": 2, "ha": 2, "been": 2, "metadata_planning_unit": 2, "import_fold": 2, "initialiseapp": 2, "listprojectsforfeatur": 2, "feature_class_id": 2, "listprojectsforplanninggrid": 2, "_str": 2, "_color": 2, "x1b": 2, "39m": 2, "colorama": 2, "color": 2, "fore": 2, "reset": 2, "logout": 2, "out": 2, "cooki": 2, "methodnotfound": 2, "overrid": 2, "found": 2, "polygon": 2, "summaris": 2, "comput": 2, "pu_count": 2, "boundari": 2, "length": 2, "thei": 2, "produc": 2, "bound": 2, "renam": 2, "newnam": 2, "reprocessprotectedarea": 2, "redo": 2, "preprocesses": 2, "case_studi": 2, "case": 2, "studi": 2, "redon": 2, "after": 2, "resend": 2, "address": 2, "state": 2, "resetnotif": 2, "country_area": 2, "current_protected_area": 2, "current_protected_perc": 2, "endem": 2, "total_area": 2, "_alia": 2, "_feature_class_nam": 2, "stream": 2, "unix": 2, "runningmarxan": 2, "finishoutput": 2, "returncod": 2, "socket": 2, "killer": 2, "oper": 2, "logrun": 2, "job": 2, "line": 2, "stream_marxan_output": 2, "first": 2, "ioloop": 2, "script": 2, "shut": 2, "period": 2, "delai": 2, "minut": 2, "kill": 2, "identifi": 2, "servivc": 2, "work": 2, "properli": [0, 2], "toggl": 2, "whether": 2, "enabl": 2, "rootnam": 2, "rootfilenam": 2, "pu": 2, "status1_id": 2, "status2_id": 2, "status3_id": 2, "public": 2, "avail": [0, 2], "downloadurl": 2, "normal": 2, "asyncdownload": 2, "asyncron": 2, "save": 2, "necessari": 2, "byte": 2, "destfold": 2, "rel": 2, "marxan_fold": 2, "mapbox_layer_nam": 2, "credenti": 2, "incorrect": 2, "str": 2, "provid": 0, "systemat": 0, "conserv": 0, "tool": 0, "whole": 0, "confirm": 0, "click": 0, "link": 0, "ny43uciwwa": 0, "oc": 0, "app": 0}, "objects": {"": [[2, 0, 0, "-", "server"]], "server": [[2, 1, 1, "", "Application"], [2, 2, 1, "", "DICT_PAD"], [2, 2, 1, "", "DOCS_ROOT"], [2, 2, 1, "", "ERRORS_PAGE"], [2, 2, 1, "", "EXPORT_F_METADATA"], [2, 2, 1, "", "EXPORT_F_SHP_FOLDER"], [2, 2, 1, "", "EXPORT_PU_METADATA"], [2, 2, 1, "", "EXPORT_PU_SHP_FOLDER"], [2, 1, 1, "", "ExtendableObject"], [2, 2, 1, "", "FEATURE_PREPROCESSING_FILENAME"], [2, 2, 1, "", "GBIF_API_ROOT"], [2, 2, 1, "", "GBIF_CONCURRENCY"], [2, 2, 1, "", "GBIF_OCCURRENCE_LIMIT"], [2, 2, 1, "", "GBIF_PAGE_SIZE"], [2, 2, 1, "", "GBIF_POINT_BUFFER_RADIUS"], [2, 2, 1, "", "GUEST_USERNAME"], [2, 2, 1, "", "LOGGING_LEVEL"], [2, 2, 1, "", "MAPBOX_USER"], [2, 2, 1, "", "MARXAN_LOG_FILENAME"], [2, 2, 1, "", "MARXAN_REGISTRY"], [2, 2, 1, "", "MARXAN_SERVER_VERSION"], [2, 1, 1, "", "MarxanRESTHandler"], [2, 5, 1, "", "MarxanServicesError"], [2, 1, 1, "", "MarxanSubprocess"], [2, 1, 1, "", "MarxanWebSocketHandler"], [2, 2, 1, "", "PERMITTED_METHODS"], [2, 2, 1, "", "PING_INTERVAL"], [2, 2, 1, "", "PROTECTED_AREA_INTERSECTIONS_FILENAME"], [2, 1, 1, "", "PostGIS"], [2, 1, 1, "", "QueryWebSocketHandler"], [2, 2, 1, "", "ROLE_UNAUTHORISED_METHODS"], [2, 2, 1, "", "RUN_LOG_FILENAME"], [2, 2, 1, "", "SERVER_CONFIG_FILENAME"], [2, 2, 1, "", "SHOW_START_LOG"], [2, 2, 1, "", "SHUTDOWN_EVENT"], [2, 2, 1, "", "UNIFORM_COST_NAME"], [2, 2, 1, "", "USER_DATA_FILENAME"], [2, 1, 1, "", "addParameter"], [2, 1, 1, "", "block"], [2, 1, 1, "", "cleanup"], [2, 1, 1, "", "clearRunLogs"], [2, 1, 1, "", "cloneProject"], [2, 1, 1, "", "createFeatureFromLinestring"], [2, 1, 1, "", "createFeaturePreprocessingFileFromImport"], [2, 1, 1, "", "createFeaturesFromWFS"], [2, 1, 1, "", "createImportProject"], [2, 1, 1, "", "createPlanningUnitGrid"], [2, 1, 1, "", "createProject"], [2, 1, 1, "", "createProjectGroup"], [2, 1, 1, "", "createUser"], [2, 1, 1, "", "deleteCost"], [2, 1, 1, "", "deleteFeature"], [2, 1, 1, "", "deleteGapAnalysis"], [2, 1, 1, "", "deletePlanningUnitGrid"], [2, 1, 1, "", "deleteProject"], [2, 1, 1, "", "deleteProjects"], [2, 1, 1, "", "deleteShapefile"], [2, 1, 1, "", "deleteUser"], [2, 1, 1, "", "dismissNotification"], [2, 1, 1, "", "exportFeature"], [2, 1, 1, "", "exportPlanningUnitGrid"], [2, 1, 1, "", "exportProject"], [2, 1, 1, "", "getAllSpeciesData"], [2, 1, 1, "", "getBestSolution"], [2, 1, 1, "", "getCosts"], [2, 1, 1, "", "getCountries"], [2, 1, 1, "", "getFeature"], [2, 1, 1, "", "getFeaturePlanningUnits"], [2, 1, 1, "", "getMarxanLog"], [2, 1, 1, "", "getMissingValues"], [2, 1, 1, "", "getOutputSummary"], [2, 1, 1, "", "getPUData"], [2, 1, 1, "", "getPlanningUnitGrids"], [2, 1, 1, "", "getPlanningUnitsCostData"], [2, 1, 1, "", "getPlanningUnitsData"], [2, 1, 1, "", "getProject"], [2, 1, 1, "", "getProjects"], [2, 1, 1, "", "getProjectsWithGrids"], [2, 1, 1, "", "getProtectedAreaIntersectionsData"], [2, 1, 1, "", "getResults"], [2, 1, 1, "", "getRunLogs"], [2, 1, 1, "", "getServerData"], [2, 1, 1, "", "getShapefileFieldnames"], [2, 1, 1, "", "getSolution"], [2, 1, 1, "", "getSpeciesData"], [2, 1, 1, "", "getSpeciesPreProcessingData"], [2, 1, 1, "", "getSummedSolution"], [2, 1, 1, "", "getUser"], [2, 1, 1, "", "getUsers"], [2, 1, 1, "", "importFeatures"], [2, 1, 1, "", "importGBIFData"], [2, 1, 1, "", "importPlanningUnitGrid"], [2, 1, 1, "", "importProject"], [2, 6, 1, "", "initialiseApp"], [2, 1, 1, "", "listProjectsForFeature"], [2, 1, 1, "", "listProjectsForPlanningGrid"], [2, 6, 1, "", "log"], [2, 1, 1, "", "logout"], [2, 1, 1, "", "methodNotFound"], [2, 1, 1, "", "preprocessFeature"], [2, 1, 1, "", "preprocessPlanningUnits"], [2, 1, 1, "", "preprocessProtectedAreas"], [2, 1, 1, "", "renameProject"], [2, 1, 1, "", "reprocessProtectedAreas"], [2, 1, 1, "", "resendPassword"], [2, 1, 1, "", "resetDatabase"], [2, 1, 1, "", "resetNotifications"], [2, 1, 1, "", "runGapAnalysis"], [2, 1, 1, "", "runMarxan"], [2, 1, 1, "", "runSQLFile"], [2, 1, 1, "", "shutdown"], [2, 1, 1, "", "stopProcess"], [2, 1, 1, "", "testRoleAuthorisation"], [2, 1, 1, "", "testTornado"], [2, 1, 1, "", "toggleEnableGuestUser"], [2, 1, 1, "", "unzipShapefile"], [2, 1, 1, "", "updateCosts"], [2, 1, 1, "", "updatePUFile"], [2, 1, 1, "", "updateProjectParameters"], [2, 1, 1, "", "updateSpecFile"], [2, 1, 1, "", "updateUserParameters"], [2, 1, 1, "", "updateWDPA"], [2, 1, 1, "", "upgradeProject"], [2, 1, 1, "", "uploadFile"], [2, 1, 1, "", "uploadFileToFolder"], [2, 1, 1, "", "uploadTilesetToMapBox"], [2, 1, 1, "", "validateUser"]], "server.MarxanRESTHandler": [[2, 3, 1, "", "folder_input"], [2, 3, 1, "", "folder_output"], [2, 3, 1, "", "folder_project"], [2, 3, 1, "", "folder_user"], [2, 4, 1, "", "get_current_user"], [2, 4, 1, "", "prepare"], [2, 3, 1, "", "project"], [2, 4, 1, "", "send_response"], [2, 4, 1, "", "set_default_headers"], [2, 3, 1, "", "user"], [2, 4, 1, "", "write_error"]], "server.MarxanSubprocess": [[2, 4, 1, "", "set_exit_callback_windows"]], "server.MarxanWebSocketHandler": [[2, 4, 1, "", "check_origin"], [2, 4, 1, "", "close"], [2, 4, 1, "", "get_current_user"], [2, 4, 1, "", "open"], [2, 4, 1, "", "send_response"]], "server.PostGIS": [[2, 4, 1, "", "createPrimaryKey"], [2, 4, 1, "", "execute"], [2, 4, 1, "", "exportToShapefile"], [2, 4, 1, "", "getGeometryType"], [2, 4, 1, "", "importFile"], [2, 4, 1, "", "importFileGDBFeatureClass"], [2, 4, 1, "", "importGml"], [2, 4, 1, "", "importShapefile"], [2, 4, 1, "", "initialise"], [2, 4, 1, "", "isValid"], [2, 3, 1, "", "pool"]], "server.QueryWebSocketHandler": [[2, 4, 1, "", "executeQuery"], [2, 3, 1, "", "pid"]], "server.addParameter": [[2, 4, 1, "", "get"]], "server.block": [[2, 4, 1, "", "get"]], "server.cleanup": [[2, 4, 1, "", "get"]], "server.clearRunLogs": [[2, 4, 1, "", "get"]], "server.cloneProject": [[2, 4, 1, "", "get"]], "server.createFeatureFromLinestring": [[2, 4, 1, "", "post"]], "server.createFeaturePreprocessingFileFromImport": [[2, 4, 1, "", "get"]], "server.createFeaturesFromWFS": [[2, 4, 1, "", "open"]], "server.createImportProject": [[2, 4, 1, "", "post"]], "server.createPlanningUnitGrid": [[2, 4, 1, "", "open"]], "server.createProject": [[2, 4, 1, "", "post"]], "server.createProjectGroup": [[2, 4, 1, "", "get"]], "server.createUser": [[2, 4, 1, "", "post"]], "server.deleteCost": [[2, 4, 1, "", "get"]], "server.deleteFeature": [[2, 4, 1, "", "get"]], "server.deleteGapAnalysis": [[2, 4, 1, "", "get"]], "server.deletePlanningUnitGrid": [[2, 4, 1, "", "get"]], "server.deleteProject": [[2, 4, 1, "", "get"]], "server.deleteProjects": [[2, 4, 1, "", "get"]], "server.deleteShapefile": [[2, 4, 1, "", "get"]], "server.deleteUser": [[2, 4, 1, "", "get"]], "server.dismissNotification": [[2, 4, 1, "", "get"]], "server.exportFeature": [[2, 4, 1, "", "get"]], "server.exportPlanningUnitGrid": [[2, 4, 1, "", "get"]], "server.exportProject": [[2, 4, 1, "", "open"]], "server.getAllSpeciesData": [[2, 4, 1, "", "get"]], "server.getBestSolution": [[2, 4, 1, "", "get"]], "server.getCosts": [[2, 4, 1, "", "get"]], "server.getCountries": [[2, 4, 1, "", "get"]], "server.getFeature": [[2, 4, 1, "", "get"]], "server.getFeaturePlanningUnits": [[2, 4, 1, "", "get"]], "server.getMarxanLog": [[2, 4, 1, "", "get"]], "server.getMissingValues": [[2, 4, 1, "", "get"]], "server.getOutputSummary": [[2, 4, 1, "", "get"]], "server.getPUData": [[2, 4, 1, "", "get"]], "server.getPlanningUnitGrids": [[2, 4, 1, "", "get"]], "server.getPlanningUnitsCostData": [[2, 4, 1, "", "get"]], "server.getPlanningUnitsData": [[2, 4, 1, "", "get"]], "server.getProject": [[2, 4, 1, "", "get"]], "server.getProjects": [[2, 4, 1, "", "get"]], "server.getProjectsWithGrids": [[2, 4, 1, "", "get"]], "server.getProtectedAreaIntersectionsData": [[2, 4, 1, "", "get"]], "server.getResults": [[2, 4, 1, "", "get"]], "server.getRunLogs": [[2, 4, 1, "", "get"]], "server.getServerData": [[2, 4, 1, "", "get"]], "server.getShapefileFieldnames": [[2, 4, 1, "", "get"]], "server.getSolution": [[2, 4, 1, "", "get"]], "server.getSpeciesData": [[2, 4, 1, "", "get"]], "server.getSpeciesPreProcessingData": [[2, 4, 1, "", "get"]], "server.getSummedSolution": [[2, 4, 1, "", "get"]], "server.getUser": [[2, 4, 1, "", "get"]], "server.getUsers": [[2, 4, 1, "", "get"]], "server.importFeatures": [[2, 4, 1, "", "open"]], "server.importGBIFData": [[2, 4, 1, "", "getCommonName"], [2, 4, 1, "", "getGBIFOccurrences"], [2, 4, 1, "", "getVernacularNames"], [2, 4, 1, "", "open"]], "server.importPlanningUnitGrid": [[2, 4, 1, "", "get"]], "server.importProject": [[2, 4, 1, "", "open"]], "server.listProjectsForFeature": [[2, 4, 1, "", "get"]], "server.listProjectsForPlanningGrid": [[2, 4, 1, "", "get"]], "server.logout": [[2, 4, 1, "", "get"]], "server.methodNotFound": [[2, 4, 1, "", "prepare"]], "server.preprocessFeature": [[2, 4, 1, "", "open"]], "server.preprocessPlanningUnits": [[2, 4, 1, "", "open"]], "server.preprocessProtectedAreas": [[2, 4, 1, "", "open"]], "server.renameProject": [[2, 4, 1, "", "get"]], "server.reprocessProtectedAreas": [[2, 4, 1, "", "open"]], "server.resendPassword": [[2, 4, 1, "", "get"]], "server.resetDatabase": [[2, 4, 1, "", "open"]], "server.resetNotifications": [[2, 4, 1, "", "get"]], "server.runGapAnalysis": [[2, 4, 1, "", "open"]], "server.runMarxan": [[2, 4, 1, "", "finishOutput"], [2, 4, 1, "", "logRun"], [2, 4, 1, "", "open"], [2, 4, 1, "", "stream_marxan_output"]], "server.runSQLFile": [[2, 4, 1, "", "get"]], "server.shutdown": [[2, 4, 1, "", "get"]], "server.stopProcess": [[2, 4, 1, "", "get"]], "server.testRoleAuthorisation": [[2, 4, 1, "", "get"]], "server.testTornado": [[2, 4, 1, "", "get"]], "server.toggleEnableGuestUser": [[2, 4, 1, "", "get"]], "server.unzipShapefile": [[2, 4, 1, "", "get"]], "server.updateCosts": [[2, 4, 1, "", "get"]], "server.updatePUFile": [[2, 4, 1, "", "post"]], "server.updateProjectParameters": [[2, 4, 1, "", "post"]], "server.updateSpecFile": [[2, 4, 1, "", "post"]], "server.updateUserParameters": [[2, 4, 1, "", "post"]], "server.updateWDPA": [[2, 4, 1, "", "asyncDownload"], [2, 4, 1, "", "open"]], "server.upgradeProject": [[2, 4, 1, "", "get"]], "server.uploadFile": [[2, 4, 1, "", "post"]], "server.uploadFileToFolder": [[2, 4, 1, "", "post"]], "server.uploadTilesetToMapBox": [[2, 4, 1, "", "get"]], "server.validateUser": [[2, 4, 1, "", "get"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:data", "3": "py:attribute", "4": "py:method", "5": "py:exception", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "data", "Python data"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "exception", "Python exception"], "6": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "marxan": [0, 1], "server": [0, 1, 2], "": 0, "document": 0, "indic": 0, "tabl": 0, "modul": 2, "background": 0}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to Marxan Server\u2019s documentation": [[0, "welcome-to-marxan-server-s-documentation"]], "Background": [[0, "background"]], "Indices and tables": [[0, "indices-and-tables"]], "marxan-server": [[1, "marxan-server"]], "server module": [[2, "module-server"]]}, "indexentries": {"application (class in server)": [[2, "server.Application"]], "dict_pad (in module server)": [[2, "server.DICT_PAD"]], "docs_root (in module server)": [[2, "server.DOCS_ROOT"]], "errors_page (in module server)": [[2, "server.ERRORS_PAGE"]], "export_f_metadata (in module server)": [[2, "server.EXPORT_F_METADATA"]], "export_f_shp_folder (in module server)": [[2, "server.EXPORT_F_SHP_FOLDER"]], "export_pu_metadata (in module server)": [[2, "server.EXPORT_PU_METADATA"]], "export_pu_shp_folder (in module server)": [[2, "server.EXPORT_PU_SHP_FOLDER"]], "extendableobject (class in server)": [[2, "server.ExtendableObject"]], "feature_preprocessing_filename (in module server)": [[2, "server.FEATURE_PREPROCESSING_FILENAME"]], "gbif_api_root (in module server)": [[2, "server.GBIF_API_ROOT"]], "gbif_concurrency (in module server)": [[2, "server.GBIF_CONCURRENCY"]], "gbif_occurrence_limit (in module server)": [[2, "server.GBIF_OCCURRENCE_LIMIT"]], "gbif_page_size (in module server)": [[2, "server.GBIF_PAGE_SIZE"]], "gbif_point_buffer_radius (in module server)": [[2, "server.GBIF_POINT_BUFFER_RADIUS"]], "guest_username (in module server)": [[2, "server.GUEST_USERNAME"]], "logging_level (in module server)": [[2, "server.LOGGING_LEVEL"]], "mapbox_user (in module server)": [[2, "server.MAPBOX_USER"]], "marxan_log_filename (in module server)": [[2, "server.MARXAN_LOG_FILENAME"]], "marxan_registry (in module server)": [[2, "server.MARXAN_REGISTRY"]], "marxan_server_version (in module server)": [[2, "server.MARXAN_SERVER_VERSION"]], "marxanresthandler (class in server)": [[2, "server.MarxanRESTHandler"]], "marxanserviceserror": [[2, "server.MarxanServicesError"]], "marxansubprocess (class in server)": [[2, "server.MarxanSubprocess"]], "marxanwebsockethandler (class in server)": [[2, "server.MarxanWebSocketHandler"]], "permitted_methods (in module server)": [[2, "server.PERMITTED_METHODS"]], "ping_interval (in module server)": [[2, "server.PING_INTERVAL"]], "protected_area_intersections_filename (in module server)": [[2, "server.PROTECTED_AREA_INTERSECTIONS_FILENAME"]], "postgis (class in server)": [[2, "server.PostGIS"]], "querywebsockethandler (class in server)": [[2, "server.QueryWebSocketHandler"]], "role_unauthorised_methods (in module server)": [[2, "server.ROLE_UNAUTHORISED_METHODS"]], "run_log_filename (in module server)": [[2, "server.RUN_LOG_FILENAME"]], "server_config_filename (in module server)": [[2, "server.SERVER_CONFIG_FILENAME"]], "show_start_log (in module server)": [[2, "server.SHOW_START_LOG"]], "shutdown_event (in module server)": [[2, "server.SHUTDOWN_EVENT"]], "uniform_cost_name (in module server)": [[2, "server.UNIFORM_COST_NAME"]], "user_data_filename (in module server)": [[2, "server.USER_DATA_FILENAME"]], "addparameter (class in server)": [[2, "server.addParameter"]], "asyncdownload() (server.updatewdpa method)": [[2, "server.updateWDPA.asyncDownload"]], "block (class in server)": [[2, "server.block"]], "check_origin() (server.marxanwebsockethandler method)": [[2, "server.MarxanWebSocketHandler.check_origin"]], "cleanup (class in server)": [[2, "server.cleanup"]], "clearrunlogs (class in server)": [[2, "server.clearRunLogs"]], "cloneproject (class in server)": [[2, "server.cloneProject"]], "close() (server.marxanwebsockethandler method)": [[2, "server.MarxanWebSocketHandler.close"]], "createfeaturefromlinestring (class in server)": [[2, "server.createFeatureFromLinestring"]], "createfeaturepreprocessingfilefromimport (class in server)": [[2, "server.createFeaturePreprocessingFileFromImport"]], "createfeaturesfromwfs (class in server)": [[2, "server.createFeaturesFromWFS"]], "createimportproject (class in server)": [[2, "server.createImportProject"]], "createplanningunitgrid (class in server)": [[2, "server.createPlanningUnitGrid"]], "createprimarykey() (server.postgis method)": [[2, "server.PostGIS.createPrimaryKey"]], "createproject (class in server)": [[2, "server.createProject"]], "createprojectgroup (class in server)": [[2, "server.createProjectGroup"]], "createuser (class in server)": [[2, "server.createUser"]], "deletecost (class in server)": [[2, "server.deleteCost"]], "deletefeature (class in server)": [[2, "server.deleteFeature"]], "deletegapanalysis (class in server)": [[2, "server.deleteGapAnalysis"]], "deleteplanningunitgrid (class in server)": [[2, "server.deletePlanningUnitGrid"]], "deleteproject (class in server)": [[2, "server.deleteProject"]], "deleteprojects (class in server)": [[2, "server.deleteProjects"]], "deleteshapefile (class in server)": [[2, "server.deleteShapefile"]], "deleteuser (class in server)": [[2, "server.deleteUser"]], "dismissnotification (class in server)": [[2, "server.dismissNotification"]], "execute() (server.postgis method)": [[2, "server.PostGIS.execute"]], "executequery() (server.querywebsockethandler method)": [[2, "server.QueryWebSocketHandler.executeQuery"]], "exportfeature (class in server)": [[2, "server.exportFeature"]], "exportplanningunitgrid (class in server)": [[2, "server.exportPlanningUnitGrid"]], "exportproject (class in server)": [[2, "server.exportProject"]], "exporttoshapefile() (server.postgis method)": [[2, "server.PostGIS.exportToShapefile"]], "finishoutput() (server.runmarxan method)": [[2, "server.runMarxan.finishOutput"]], "folder_input (server.marxanresthandler attribute)": [[2, "server.MarxanRESTHandler.folder_input"]], "folder_output (server.marxanresthandler attribute)": [[2, "server.MarxanRESTHandler.folder_output"]], "folder_project (server.marxanresthandler attribute)": [[2, "server.MarxanRESTHandler.folder_project"]], "folder_user (server.marxanresthandler attribute)": [[2, "server.MarxanRESTHandler.folder_user"]], "get() (server.addparameter method)": [[2, "server.addParameter.get"]], "get() (server.block method)": [[2, "server.block.get"]], "get() (server.cleanup method)": [[2, "server.cleanup.get"]], "get() (server.clearrunlogs method)": [[2, "server.clearRunLogs.get"]], "get() (server.cloneproject method)": [[2, "server.cloneProject.get"]], "get() (server.createfeaturepreprocessingfilefromimport method)": [[2, "server.createFeaturePreprocessingFileFromImport.get"]], "get() (server.createprojectgroup method)": [[2, "server.createProjectGroup.get"]], "get() (server.deletecost method)": [[2, "server.deleteCost.get"]], "get() (server.deletefeature method)": [[2, "server.deleteFeature.get"]], "get() (server.deletegapanalysis method)": [[2, "server.deleteGapAnalysis.get"]], "get() (server.deleteplanningunitgrid method)": [[2, "server.deletePlanningUnitGrid.get"]], "get() (server.deleteproject method)": [[2, "server.deleteProject.get"]], "get() (server.deleteprojects method)": [[2, "server.deleteProjects.get"]], "get() (server.deleteshapefile method)": [[2, "server.deleteShapefile.get"]], "get() (server.deleteuser method)": [[2, "server.deleteUser.get"]], "get() (server.dismissnotification method)": [[2, "server.dismissNotification.get"]], "get() (server.exportfeature method)": [[2, "server.exportFeature.get"]], "get() (server.exportplanningunitgrid method)": [[2, "server.exportPlanningUnitGrid.get"]], "get() (server.getallspeciesdata method)": [[2, "server.getAllSpeciesData.get"]], "get() (server.getbestsolution method)": [[2, "server.getBestSolution.get"]], "get() (server.getcosts method)": [[2, "server.getCosts.get"]], "get() (server.getcountries method)": [[2, "server.getCountries.get"]], "get() (server.getfeature method)": [[2, "server.getFeature.get"]], "get() (server.getfeatureplanningunits method)": [[2, "server.getFeaturePlanningUnits.get"]], "get() (server.getmarxanlog method)": [[2, "server.getMarxanLog.get"]], "get() (server.getmissingvalues method)": [[2, "server.getMissingValues.get"]], "get() (server.getoutputsummary method)": [[2, "server.getOutputSummary.get"]], "get() (server.getpudata method)": [[2, "server.getPUData.get"]], "get() (server.getplanningunitgrids method)": [[2, "server.getPlanningUnitGrids.get"]], "get() (server.getplanningunitscostdata method)": [[2, "server.getPlanningUnitsCostData.get"]], "get() (server.getplanningunitsdata method)": [[2, "server.getPlanningUnitsData.get"]], "get() (server.getproject method)": [[2, "server.getProject.get"]], "get() (server.getprojects method)": [[2, "server.getProjects.get"]], "get() (server.getprojectswithgrids method)": [[2, "server.getProjectsWithGrids.get"]], "get() (server.getprotectedareaintersectionsdata method)": [[2, "server.getProtectedAreaIntersectionsData.get"]], "get() (server.getresults method)": [[2, "server.getResults.get"]], "get() (server.getrunlogs method)": [[2, "server.getRunLogs.get"]], "get() (server.getserverdata method)": [[2, "server.getServerData.get"]], "get() (server.getshapefilefieldnames method)": [[2, "server.getShapefileFieldnames.get"]], "get() (server.getsolution method)": [[2, "server.getSolution.get"]], "get() (server.getspeciesdata method)": [[2, "server.getSpeciesData.get"]], "get() (server.getspeciespreprocessingdata method)": [[2, "server.getSpeciesPreProcessingData.get"]], "get() (server.getsummedsolution method)": [[2, "server.getSummedSolution.get"]], "get() (server.getuser method)": [[2, "server.getUser.get"]], "get() (server.getusers method)": [[2, "server.getUsers.get"]], "get() (server.importplanningunitgrid method)": [[2, "server.importPlanningUnitGrid.get"]], "get() (server.listprojectsforfeature method)": [[2, "server.listProjectsForFeature.get"]], "get() (server.listprojectsforplanninggrid method)": [[2, "server.listProjectsForPlanningGrid.get"]], "get() (server.logout method)": [[2, "server.logout.get"]], "get() (server.renameproject method)": [[2, "server.renameProject.get"]], "get() (server.resendpassword method)": [[2, "server.resendPassword.get"]], "get() (server.resetnotifications method)": [[2, "server.resetNotifications.get"]], "get() (server.runsqlfile method)": [[2, "server.runSQLFile.get"]], "get() (server.shutdown method)": [[2, "server.shutdown.get"]], "get() (server.stopprocess method)": [[2, "server.stopProcess.get"]], "get() (server.testroleauthorisation method)": [[2, "server.testRoleAuthorisation.get"]], "get() (server.testtornado method)": [[2, "server.testTornado.get"]], "get() (server.toggleenableguestuser method)": [[2, "server.toggleEnableGuestUser.get"]], "get() (server.unzipshapefile method)": [[2, "server.unzipShapefile.get"]], "get() (server.updatecosts method)": [[2, "server.updateCosts.get"]], "get() (server.upgradeproject method)": [[2, "server.upgradeProject.get"]], "get() (server.uploadtilesettomapbox method)": [[2, "server.uploadTilesetToMapBox.get"]], "get() (server.validateuser method)": [[2, "server.validateUser.get"]], "getallspeciesdata (class in server)": [[2, "server.getAllSpeciesData"]], "getbestsolution (class in server)": [[2, "server.getBestSolution"]], "getcommonname() (server.importgbifdata method)": [[2, "server.importGBIFData.getCommonName"]], "getcosts (class in server)": [[2, "server.getCosts"]], "getcountries (class in server)": [[2, "server.getCountries"]], "getfeature (class in server)": [[2, "server.getFeature"]], "getfeatureplanningunits (class in server)": [[2, "server.getFeaturePlanningUnits"]], "getgbifoccurrences() (server.importgbifdata method)": [[2, "server.importGBIFData.getGBIFOccurrences"]], "getgeometrytype() (server.postgis method)": [[2, "server.PostGIS.getGeometryType"]], "getmarxanlog (class in server)": [[2, "server.getMarxanLog"]], "getmissingvalues (class in server)": [[2, "server.getMissingValues"]], "getoutputsummary (class in server)": [[2, "server.getOutputSummary"]], "getpudata (class in server)": [[2, "server.getPUData"]], "getplanningunitgrids (class in server)": [[2, "server.getPlanningUnitGrids"]], "getplanningunitscostdata (class in server)": [[2, "server.getPlanningUnitsCostData"]], "getplanningunitsdata (class in server)": [[2, "server.getPlanningUnitsData"]], "getproject (class in server)": [[2, "server.getProject"]], "getprojects (class in server)": [[2, "server.getProjects"]], "getprojectswithgrids (class in server)": [[2, "server.getProjectsWithGrids"]], "getprotectedareaintersectionsdata (class in server)": [[2, "server.getProtectedAreaIntersectionsData"]], "getresults (class in server)": [[2, "server.getResults"]], "getrunlogs (class in server)": [[2, "server.getRunLogs"]], "getserverdata (class in server)": [[2, "server.getServerData"]], "getshapefilefieldnames (class in server)": [[2, "server.getShapefileFieldnames"]], "getsolution (class in server)": [[2, "server.getSolution"]], "getspeciesdata (class in server)": [[2, "server.getSpeciesData"]], "getspeciespreprocessingdata (class in server)": [[2, "server.getSpeciesPreProcessingData"]], "getsummedsolution (class in server)": [[2, "server.getSummedSolution"]], "getuser (class in server)": [[2, "server.getUser"]], "getusers (class in server)": [[2, "server.getUsers"]], "getvernacularnames() (server.importgbifdata method)": [[2, "server.importGBIFData.getVernacularNames"]], "get_current_user() (server.marxanresthandler method)": [[2, "server.MarxanRESTHandler.get_current_user"]], "get_current_user() (server.marxanwebsockethandler method)": [[2, "server.MarxanWebSocketHandler.get_current_user"]], "importfeatures (class in server)": [[2, "server.importFeatures"]], "importfile() (server.postgis method)": [[2, "server.PostGIS.importFile"]], "importfilegdbfeatureclass() (server.postgis method)": [[2, "server.PostGIS.importFileGDBFeatureClass"]], "importgbifdata (class in server)": [[2, "server.importGBIFData"]], "importgml() (server.postgis method)": [[2, "server.PostGIS.importGml"]], "importplanningunitgrid (class in server)": [[2, "server.importPlanningUnitGrid"]], "importproject (class in server)": [[2, "server.importProject"]], "importshapefile() (server.postgis method)": [[2, "server.PostGIS.importShapefile"]], "initialise() (server.postgis method)": [[2, "server.PostGIS.initialise"]], "initialiseapp() (in module server)": [[2, "server.initialiseApp"]], "isvalid() (server.postgis method)": [[2, "server.PostGIS.isValid"]], "listprojectsforfeature (class in server)": [[2, "server.listProjectsForFeature"]], "listprojectsforplanninggrid (class in server)": [[2, "server.listProjectsForPlanningGrid"]], "log() (in module server)": [[2, "server.log"]], "logrun() (server.runmarxan method)": [[2, "server.runMarxan.logRun"]], "logout (class in server)": [[2, "server.logout"]], "methodnotfound (class in server)": [[2, "server.methodNotFound"]], "module": [[2, "module-server"]], "open() (server.marxanwebsockethandler method)": [[2, "server.MarxanWebSocketHandler.open"]], "open() (server.createfeaturesfromwfs method)": [[2, "server.createFeaturesFromWFS.open"]], "open() (server.createplanningunitgrid method)": [[2, "server.createPlanningUnitGrid.open"]], "open() (server.exportproject method)": [[2, "server.exportProject.open"]], "open() (server.importfeatures method)": [[2, "server.importFeatures.open"]], "open() (server.importgbifdata method)": [[2, "server.importGBIFData.open"]], "open() (server.importproject method)": [[2, "server.importProject.open"]], "open() (server.preprocessfeature method)": [[2, "server.preprocessFeature.open"]], "open() (server.preprocessplanningunits method)": [[2, "server.preprocessPlanningUnits.open"]], "open() (server.preprocessprotectedareas method)": [[2, "server.preprocessProtectedAreas.open"]], "open() (server.reprocessprotectedareas method)": [[2, "server.reprocessProtectedAreas.open"]], "open() (server.resetdatabase method)": [[2, "server.resetDatabase.open"]], "open() (server.rungapanalysis method)": [[2, "server.runGapAnalysis.open"]], "open() (server.runmarxan method)": [[2, "server.runMarxan.open"]], "open() (server.updatewdpa method)": [[2, "server.updateWDPA.open"]], "pid (server.querywebsockethandler attribute)": [[2, "server.QueryWebSocketHandler.pid"]], "pool (server.postgis attribute)": [[2, "server.PostGIS.pool"]], "post() (server.createfeaturefromlinestring method)": [[2, "server.createFeatureFromLinestring.post"]], "post() (server.createimportproject method)": [[2, "server.createImportProject.post"]], "post() (server.createproject method)": [[2, "server.createProject.post"]], "post() (server.createuser method)": [[2, "server.createUser.post"]], "post() (server.updatepufile method)": [[2, "server.updatePUFile.post"]], "post() (server.updateprojectparameters method)": [[2, "server.updateProjectParameters.post"]], "post() (server.updatespecfile method)": [[2, "server.updateSpecFile.post"]], "post() (server.updateuserparameters method)": [[2, "server.updateUserParameters.post"]], "post() (server.uploadfile method)": [[2, "server.uploadFile.post"]], "post() (server.uploadfiletofolder method)": [[2, "server.uploadFileToFolder.post"]], "prepare() (server.marxanresthandler method)": [[2, "server.MarxanRESTHandler.prepare"]], "prepare() (server.methodnotfound method)": [[2, "server.methodNotFound.prepare"]], "preprocessfeature (class in server)": [[2, "server.preprocessFeature"]], "preprocessplanningunits (class in server)": [[2, "server.preprocessPlanningUnits"]], "preprocessprotectedareas (class in server)": [[2, "server.preprocessProtectedAreas"]], "project (server.marxanresthandler attribute)": [[2, "server.MarxanRESTHandler.project"]], "renameproject (class in server)": [[2, "server.renameProject"]], "reprocessprotectedareas (class in server)": [[2, "server.reprocessProtectedAreas"]], "resendpassword (class in server)": [[2, "server.resendPassword"]], "resetdatabase (class in server)": [[2, "server.resetDatabase"]], "resetnotifications (class in server)": [[2, "server.resetNotifications"]], "rungapanalysis (class in server)": [[2, "server.runGapAnalysis"]], "runmarxan (class in server)": [[2, "server.runMarxan"]], "runsqlfile (class in server)": [[2, "server.runSQLFile"]], "send_response() (server.marxanresthandler method)": [[2, "server.MarxanRESTHandler.send_response"]], "send_response() (server.marxanwebsockethandler method)": [[2, "server.MarxanWebSocketHandler.send_response"]], "server": [[2, "module-server"]], "set_default_headers() (server.marxanresthandler method)": [[2, "server.MarxanRESTHandler.set_default_headers"]], "set_exit_callback_windows() (server.marxansubprocess method)": [[2, "server.MarxanSubprocess.set_exit_callback_windows"]], "shutdown (class in server)": [[2, "server.shutdown"]], "stopprocess (class in server)": [[2, "server.stopProcess"]], "stream_marxan_output() (server.runmarxan method)": [[2, "server.runMarxan.stream_marxan_output"]], "testroleauthorisation (class in server)": [[2, "server.testRoleAuthorisation"]], "testtornado (class in server)": [[2, "server.testTornado"]], "toggleenableguestuser (class in server)": [[2, "server.toggleEnableGuestUser"]], "unzipshapefile (class in server)": [[2, "server.unzipShapefile"]], "updatecosts (class in server)": [[2, "server.updateCosts"]], "updatepufile (class in server)": [[2, "server.updatePUFile"]], "updateprojectparameters (class in server)": [[2, "server.updateProjectParameters"]], "updatespecfile (class in server)": [[2, "server.updateSpecFile"]], "updateuserparameters (class in server)": [[2, "server.updateUserParameters"]], "updatewdpa (class in server)": [[2, "server.updateWDPA"]], "upgradeproject (class in server)": [[2, "server.upgradeProject"]], "uploadfile (class in server)": [[2, "server.uploadFile"]], "uploadfiletofolder (class in server)": [[2, "server.uploadFileToFolder"]], "uploadtilesettomapbox (class in server)": [[2, "server.uploadTilesetToMapBox"]], "user (server.marxanresthandler attribute)": [[2, "server.MarxanRESTHandler.user"]], "validateuser (class in server)": [[2, "server.validateUser"]], "write_error() (server.marxanresthandler method)": [[2, "server.MarxanRESTHandler.write_error"]]}})